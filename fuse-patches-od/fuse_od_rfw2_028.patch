From e58793170ba0760be74b0cb967de6c561c9ef263 Mon Sep 17 00:00:00 2001
From: Pedro Luis Rodríguez González <pl.rguez@gmail.com>
Date: 5 dic. 2020 17:41:34

Patch #28 Show screen refresh options only for mainline OpenDingux

diff --git a/configure.ac b/configure.ac
index 7717d60..8cc94e4 100644
--- a/configure.ac
+++ b/configure.ac
@@ -349,6 +349,7 @@
   AC_DEFINE([UI_SDL], 1, [Defined if the SDL UI in use])
   AC_DEFINE([USE_WIDGET], 1, [Defined if we're using a widget-based UI])
   AC_DEFINE([GCW0_VERSION], "m4_normalize(m4_include(Platform/VERSION)) for OpenDingux/RetroFW", [OpenDingux/RetroFW Version])
+  AC_CHECK_HEADERS(libdrm/drm.h libkms/libkms.h,AC_DEFINE([OPENDINGUX_KMSDRM], 1, [Defined if the beta OpenDingux detected]))
 fi
 
 dnl Look for null UI (default=no)
diff --git a/sound.c b/sound.c
index 76695b0..3e6fc95 100644
--- a/sound.c
+++ b/sound.c
@@ -39,7 +39,7 @@
 #include "timer/timer.h"
 #include "ui/ui.h"
 #include "sound/blipbuffer.h"
-#ifdef GCWZERO
+#ifdef OPENDINGUX_KMSDRM
 #include <math.h>
 #endif
 
@@ -111,7 +111,7 @@
 static struct speaker_type_tag speaker_type[] =
   { { 200, -37.0 }, { 1000, -67.0 }, { 0, 0.0 } };
 
-#ifdef GCWZERO
+#ifdef OPENDINGUX_KMSDRM
 static libspectrum_dword
 od_get_processor_speed_for_vsync( void ) {
   return ( machine_current->timings.tstates_per_frame *
@@ -141,18 +141,16 @@
 sound_init_blip( Blip_Buffer **buf, Blip_Synth **synth )
 {
   *buf = new_Blip_Buffer();
-#ifdef GCWZERO
+#ifdef OPENDINGUX_KMSDRM
   libspectrum_dword cpu_speed;
-  if ( sdldisplay_od_system_type == OPENDINGUX && 
-       settings_current.od_adjust_refresh_rate &&
-       settings_current.od_dynamic_sound_rate )
+  if ( settings_current.od_adjust_refresh_rate && settings_current.od_dynamic_sound_rate )
     cpu_speed = od_get_processor_speed_for_vsync();
   else
     cpu_speed = sound_get_effective_processor_speed();
   blip_buffer_set_clock_rate( *buf, cpu_speed );
 #else
   blip_buffer_set_clock_rate( *buf, sound_get_effective_processor_speed() );
-#endif
+#endif /* #ifdef OPENDINGUX_KMSDRM */
   /* Allow up to 1s of playback buffer - this allows us to cope with slowing
      down to 2% of speed where a single Speccy frame generates just under 1s
      of sound */
@@ -341,11 +339,9 @@
   /* Adjust relative processor speed to deal with adjusting sound generation
      frequency against emulation speed (more flexible than adjusting generated
      sample rate) */
-#ifdef GCWZERO
+#ifdef OPENDINGUX_KMSDRM
   libspectrum_dword cpu_speed;
-  if ( sdldisplay_od_system_type == OPENDINGUX &&
-       settings_current.od_adjust_refresh_rate &&
-       settings_current.od_dynamic_sound_rate )
+  if ( settings_current.od_adjust_refresh_rate && settings_current.od_dynamic_sound_rate )
     cpu_speed = od_get_processor_speed_for_vsync();
   else
     cpu_speed = sound_get_effective_processor_speed();
@@ -730,14 +726,12 @@
   if( !sound_enabled )
     return;
 
-#ifdef GCWZERO
+#ifdef OPENDINGUX_KMSDRM
   const double max_delta = 0.005;
   long dynamic_frequency = left_buf->clock_rate_;
   static int frames_to_adjust = 10;
 
-  int dynamic_sound_adjust = ( sdldisplay_od_system_type == OPENDINGUX &&
-                               settings_current.od_adjust_refresh_rate &&
-                               settings_current.od_dynamic_sound_rate ) ? 1 : 0;
+  int dynamic_sound_adjust = ( settings_current.od_adjust_refresh_rate && settings_current.od_dynamic_sound_rate ) ? 1 : 0;
   if ( dynamic_sound_adjust ) {
     frames_to_adjust--;
     if (!frames_to_adjust) {
@@ -750,7 +744,7 @@
 */
     }
   }
-#endif
+#endif /* #ifdef OPENDINGUX_KMSDRM */
 
   /* overlay AY sound */
   sound_ay_overlay();
@@ -776,7 +770,7 @@
       movie_add_sound( samples, count );
   ay_change_count = 0;
 
-#ifdef GCWZERO
+#ifdef OPENDINGUX_KMSDRM
   if ( dynamic_sound_adjust && !frames_to_adjust ) {
     frames_to_adjust = 10;
     blip_buffer_set_clock_rate( left_buf, dynamic_frequency );
@@ -787,7 +781,7 @@
     printf(" samples: %lu/%d\n", left_buf->factor_, sound_framesiz);
 */
   }
-#endif
+#endif /* #ifdef OPENDINGUX_KMSDRM */
 }
 
 void
diff --git a/ui/options.dat b/ui/options.dat
index 0740148..dfe3731 100644
--- a/ui/options.dat
+++ b/ui/options.dat
@@ -28,7 +28,7 @@
 general_gcw0
 General GCW0 Options
 Checkbox, Triple Bu(f)fer, od_triple_buffer, INPUT_KEY_f
-#ifndef RETROFW
+#ifdef OPENDINGUX_KMSDRM
 Checkbox, Adjust screen (r)efresh rate, od_adjust_refresh_rate, INPUT_KEY_r
 Checkbox, D(y)namic sound rate, od_dynamic_sound_rate, INPUT_KEY_y
 #endif
diff --git a/ui/sdl/sdldisplay.c b/ui/sdl/sdldisplay.c
index 6267c2a..4c61b73 100644
--- a/ui/sdl/sdldisplay.c
+++ b/ui/sdl/sdldisplay.c
@@ -186,18 +186,19 @@
 };
 #ifndef RETROFW
 static od_t_screen_scaling od_screen_scalings_1x_640[] = {
-  { Full,    320, 240, &vkeyboard_position[0] },
-  { Large,   300, 225, &vkeyboard_position_large_border[0] },
-  { Medium,  288, 216, &vkeyboard_position_medium_border[0] },
-  { Small,   272, 208, &vkeyboard_position_small_border[0] }, /* No 4:3 AR */
-  { None,    256, 192, &vkeyboard_position_no_border[0] },
-};
-static od_t_screen_scaling od_screen_scalings_1x_640_new[] = {
+#ifdef OPENDINGUX_KMSDRM
   { Full,    320, 240, &vkeyboard_position[0] },
   { Large,   288, 224, &vkeyboard_position_large_border[0] }, /* No 4:3 AR */
   { Medium,  288, 216, &vkeyboard_position_medium_border[0] },
   { Small,   280, 210, &vkeyboard_position_small_border[0] },
   { None,    256, 192, &vkeyboard_position_no_border[0] },
+#else
+  { Full,    320, 240, &vkeyboard_position[0] },
+  { Large,   300, 225, &vkeyboard_position_large_border[0] },
+  { Medium,  288, 216, &vkeyboard_position_medium_border[0] },
+  { Small,   272, 208, &vkeyboard_position_small_border[0] }, /* No 4:3 AR */
+  { None,    256, 192, &vkeyboard_position_no_border[0] },
+#endif /* #ifdef OPENDINGUX_KSMDRM */
 };
 static od_t_screen_scaling od_screen_scalings_1x_480[] = {
   { Full,    320, 240, &vkeyboard_position[0] },
@@ -206,15 +207,19 @@
   { Small,   272, 208, &vkeyboard_position_small_border[0] }, /* No 4:3 AR */
   { None,    256, 192, &vkeyboard_position_no_border[0] },
 };
-#endif
+#endif /* #ifndef RETROFW */
 static sdldisplay_t_od_border sdldisplay_last_od_border = Full;
 static sdldisplay_t_od_border sdldisplay_current_od_border = Full;
 static SDL_Rect clip_area;
 static libspectrum_byte sdldisplay_is_triple_buffer = 0;
+#ifndef OPENDINGUX_KMSDRM
 static libspectrum_byte sdldisplay_flips_triple_buffer = 0;
+#endif /* #ifndef OPENDINGUX_KMSDRM */
 sdldisplay_t_od_system sdldisplay_od_system_type =
 #ifdef RETROFW
 RETROFW_2;
+#elif defined(OPENDINGUX_KMSDRM)
+OPENDINGUX;
 #else
 OPENDINGUX_2014;
 #endif
@@ -243,8 +248,8 @@
   { None,   { 252, 204, 0, 0 }, { 262, 204, 0, 0 }, { 272, 206, 0, 0 }, { 35, 206, 242, 10 } },
 };
 
-#ifndef RETROFW
-static od_t_icon_positions od_icon_positions_new[] = {
+#ifdef OPENDINGUX_KMSDRM
+static od_t_icon_positions od_icon_positions_640480[] = {
   { Full,   { 243, 218, 0, 0 }, { 264, 218, 0, 0 }, { 285, 220, 0, 0 }, { 5,  225, 242, 10 } },
   { Large,  { 266, 220, 0, 0 }, { 276, 220, 0, 0 }, { 286, 222, 0, 0 }, { 19, 221, 242, 10 } },
   { Medium, { 268, 216, 0, 0 }, { 278, 216, 0, 0 }, { 288, 218, 0, 0 }, { 19, 218, 242, 10 } },
@@ -425,7 +430,7 @@
 }
 
 #ifdef GCWZERO
-#ifndef RETROFW
+#ifdef OPENDINGUX_KMSDRM
 #define OD_MODE320240 0x01
 #define OD_MODE640480 0x02
 
@@ -475,7 +480,7 @@
   if ( add_mode )
     qsort( modes, i, sizeof modes[0], od_compare_rects);
 }
-#endif /* #ifndef RETROFW */
+#endif /* #ifdef OPENDINGUX_KMSDRM */
 
 /* Initializations for OpenDingux/RetroFW */
 void
@@ -559,15 +564,8 @@
     }
     fclose( os_release );
   }
-#else
-  char driver[10];
-
-  SDL_VideoDriverName( &driver[0], 10 );
-  if ( strncmp( &driver[0], "kmsdrm", 6 ) == 0 ) {
-    sdldisplay_od_system_type = OPENDINGUX;
-    od_complete_modes( modes );
-  } else
-    sdldisplay_od_system_type = OPENDINGUX_2014;
+#elif defined(OPENDINGUX_KMSDRM)
+  od_complete_modes( modes );
 #endif /* #ifdef RETROFW */
 }
 #endif /* #ifdef GCWZERO */
@@ -840,16 +838,16 @@
   if (settings_current.od_triple_buffer) {
 #ifdef RETROFW
     sdldisplay_flips_triple_buffer = 1;
-#else
+#elif !defined(OPENDINGUX_KMSDRM)
     sdldisplay_flips_triple_buffer = 0;
 #endif /* #ifdef RETROFW */
     flags = settings_current.full_screen ? (SDL_FULLSCREEN | SDL_HWSURFACE | SDL_TRIPLEBUF)
     : (SDL_HWSURFACE | SDL_TRIPLEBUF);
   } else {
-    /* On new kmsdrm driver no need to Flip page to deactivate triple buffer */
-    if ( sdldisplay_od_system_type != OPENDINGUX )
-      while ( sdldisplay_is_triple_buffer && ++sdldisplay_flips_triple_buffer < 3 )
-        SDL_Flip( sdldisplay_gc );
+#ifndef OPENDINGUX_KMSDRM
+    while ( sdldisplay_is_triple_buffer && ++sdldisplay_flips_triple_buffer < 3 )
+      SDL_Flip( sdldisplay_gc );
+#endif /* #ifndef OPENDINGUX_KMSDRM */
     flags = settings_current.full_screen ? (SDL_FULLSCREEN | SDL_HWSURFACE)
     : SDL_HWSURFACE;
   }
@@ -857,17 +855,17 @@
   int display_width, display_height;
 #ifndef RETROFW
   sdl_od_panel_type = option_enumerate_general_gcw0_od_panel_type();
-  if ( sdldisplay_od_system_type == OPENDINGUX ) {
-    int refresh_rate = 60;
-    char crefresh_rate[3];
+#ifdef OPENDINGUX_KMSDRM
+  int refresh_rate = 60;
+  char crefresh_rate[3];
 
-    if ( settings_current.od_adjust_refresh_rate ) {
-      refresh_rate = machine_current->timings.processor_speed /
-                     machine_current->timings.tstates_per_frame;
-    }
-    snprintf(crefresh_rate, 3, "%2d", refresh_rate);
-    setenv("SDL_VIDEO_REFRESHRATE", &crefresh_rate[0], 1);
+  if ( settings_current.od_adjust_refresh_rate ) {
+    refresh_rate = machine_current->timings.processor_speed /
+        machine_current->timings.tstates_per_frame;
   }
+  snprintf(crefresh_rate, 3, "%2d", refresh_rate);
+  setenv("SDL_VIDEO_REFRESHRATE", &crefresh_rate[0], 1);
+#endif /* #ifdef OPENDINGUX_KMSDRM */
 #endif /* #ifndef RETROFW */
   sdldisplay_current_od_border = option_enumerate_general_gcw0_od_border();
   od_icon_position = od_icon_positions[sdldisplay_current_od_border];  
@@ -890,12 +888,10 @@
     if ( sdldisplay_current_size <= 1 )
       switch (sdl_od_panel_type) {
       case P640480:
-        if ( sdldisplay_od_system_type == OPENDINGUX ) {
-          ssc = &od_screen_scalings_1x_640_new[0];
-          od_icon_position = od_icon_positions_new[sdldisplay_current_od_border];
-        } else {
-          ssc = &od_screen_scalings_1x_640[0];
-        }
+        ssc = &od_screen_scalings_1x_640[0];
+#ifdef OPENDINGUX_KMSDRM
+        od_icon_position = od_icon_positions_640480[sdldisplay_current_od_border];
+#endif
         break;
       case P480320:
         ssc = &od_screen_scalings_1x_480[0];
@@ -1342,10 +1338,7 @@
   if ( sdldisplay_current_size <= 1 )
     switch (sdl_od_panel_type) {
     case P640480:
-      if ( sdldisplay_od_system_type == OPENDINGUX )
-        ssc = &od_screen_scalings_1x_640_new[0];
-      else
-        ssc = &od_screen_scalings_1x_640[0];
+      ssc = &od_screen_scalings_1x_640[0];
       break;
     case P480320:
       ssc = &od_screen_scalings_1x_480[0];
@@ -1662,11 +1655,11 @@
 #ifdef GCWZERO
   if ( sdldisplay_is_triple_buffer ) {
     SDL_Flip( sdldisplay_gc );
-    /* On new kmsdrm driver no need to Flip page to deactivate triple buffer */
-    if ( sdldisplay_od_system_type != OPENDINGUX )
-      if ( ++sdldisplay_flips_triple_buffer >= 3 ) sdldisplay_flips_triple_buffer = 0;
+#ifndef OPENDINGUX_KMSDRM
+    if ( ++sdldisplay_flips_triple_buffer >= 3 ) sdldisplay_flips_triple_buffer = 0;
+#endif /* #ifndef OPENDINGUX_KMSDRM */
   } else
-#endif
+#endif /* #ifdef GCWZERO */
   SDL_UpdateRects( sdldisplay_gc, num_rects, updated_rects );
 
   num_rects = 0;
